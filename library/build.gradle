apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = 'org.jraf'
version = '1.2.0'
description = 'kprefs'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$Versions.KOTLIN"
    api 'androidx.lifecycle:lifecycle-livedata:2.2.0'
}

android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        description "Generate Javadoc for $variant.name."
        source = variant.javaCompile.source
        classpath = files(variant.javaCompile.classpath, project.android.getBootClasspath())
        options {
            links 'http://docs.oracle.com/javase/7/docs/api/'
            linksOffline 'https://developer.android.com/reference/', "${android.sdkDirectory}/docs/reference"
            tags(['attr', 'X'])
            encoding = "UTF-8"
        }
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}

android.libraryVariants.all { variant ->
    task("jar${variant.name.capitalize()}Javadoc", type: Jar, dependsOn: "generate${variant.name.capitalize()}Javadoc") {
        description "Generate a Javadoc jar for $variant.name."
        archiveClassifier = 'javadoc'
        from buildDir.getPath() + '/docs/javadoc'
    }
}

android.libraryVariants.all { variant ->
    task("jar${variant.name.capitalize()}Sources", type: Jar) {
        description "Generate a Sources jar for $variant.name."
        archiveClassifier = 'sources'
        from variant.javaCompileProvider.get().source
    }
}

afterEvaluate {
    publishing {
        publications {
            releaseMavenPublication(MavenPublication) {
                from components.release
                artifactId = description
                artifact jarReleaseJavadoc
                artifact jarReleaseSources
            }
        }
    }

    bintray {
        user = System.getenv("USER")
        key = System.getenv("KEY")
        publications = ['releaseMavenPublication']
        pkg {
            repo = 'JRAF'
            name = description
            userOrg = 'bod'
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/BoD/android-kprefs'
            version {
                name = project.version
            }
        }
        publish = true
    }
}

// Use "./gradlew publishToMavenLocal" to deploy the artifacts to your local maven repository
// Use "USER=<username> KEY=<key> ./gradlew publishToMavenLocal bintrayUpload" to deploy the artifacts to bintray
// key can be found here: https://bintray.com/profile/edit and click on "API key"
